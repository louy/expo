{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport fs from 'fs-extra';\nimport path from 'path';\nimport prompts from 'prompts';\nimport ejs from 'ejs';\nimport spawnAsync from '@expo/spawn-async';\nimport downloadTarball from 'download-tarball';\n\n// `yarn run` may change the current working dir, then we should use `INIT_CWD` env.\nconst cwd = process.env.INIT_CWD || process.cwd();\nconst [templatePath] = process.argv.slice(2);\n\n// Ignore some paths. Especially `package.json` as it is rendered\n// from `$package.json` file instead of the original one.\nconst ignoredPaths = ['.DS_Store', 'build', 'node_modules', 'package.json'];\n\ntype SubstitutionData = {\n  project: {\n    slug: string;\n    name: string;\n    version: string;\n    description: string;\n    package: string;\n  };\n  author: string;\n  license: string;\n};\n\nasync function main() {\n  const packagePath = templatePath ? path.join(cwd, templatePath) : await downloadPackageAsync();\n  const files = await getFilesAsync(packagePath);\n  const data = await askForSubstitutionDataAsync();\n\n  console.log(files, data);\n\n  for (const file of files) {\n    const renderedRelativePath = ejs.render(file.replace(/^\\$/, ''), data, {\n      openDelimiter: '{',\n      closeDelimiter: '}',\n      escape: (value: string) => value.replace('.', path.sep),\n    });\n    const fromPath = path.join(packagePath, file);\n    const toPath = path.join(cwd, renderedRelativePath);\n    const template = await fs.readFile(fromPath, { encoding: 'utf8' });\n    const renderedContent = ejs.render(template, data);\n\n    await fs.outputFile(toPath, renderedContent, { encoding: 'utf8' });\n  }\n\n  if (!templatePath) {\n    // Remove the `package` dir after unpacking the tarball.\n    await fs.remove(packagePath);\n  }\n\n  // Build TypeScript files.\n  await spawnAsync('npm', ['run', 'build'], {\n    cwd,\n  });\n}\n\nasync function getFilesAsync(root: string, dir: string | null = null): Promise<string[]> {\n  const files: string[] = [];\n  const baseDir = dir ? path.join(root, dir) : root;\n\n  for (const file of await fs.readdir(baseDir)) {\n    const relativePath = dir ? path.join(dir, file) : file;\n\n    if (ignoredPaths.includes(relativePath) || ignoredPaths.includes(file)) {\n      continue;\n    }\n\n    const fullPath = path.join(baseDir, file);\n    const stat = await fs.lstat(fullPath);\n\n    if (stat.isDirectory()) {\n      files.push(...(await getFilesAsync(root, relativePath)));\n    } else {\n      files.push(relativePath);\n    }\n  }\n  return files;\n}\n\nasync function getNpmTarballUrl(packageName: string, version: string = 'latest'): Promise<string> {\n  const { stdout } = await spawnAsync('npm', ['view', `${packageName}@${version}`, 'dist.tarball']);\n  return stdout.trim();\n}\n\nasync function npmWhoamiAsync(): Promise<string | undefined> {\n  try {\n    const { stdout } = await spawnAsync('npm', ['whoami'], { cwd });\n    return stdout.trim();\n  } catch (e) {\n    return;\n  }\n}\n\nasync function downloadPackageAsync(): Promise<string> {\n  const tarballUrl = await getNpmTarballUrl('expo-module-template');\n\n  await downloadTarball({\n    url: tarballUrl,\n    dir: cwd,\n  });\n  return path.join(cwd, 'package');\n}\n\nasync function askForSubstitutionDataAsync(): Promise<SubstitutionData> {\n  const defaultPackageSlug = path.basename(cwd);\n  const defaultProjectName = defaultPackageSlug\n    .replace(/^./, (match) => match.toUpperCase())\n    .replace(/\\W+(\\w)/g, (_, p1) => p1.toUpperCase());\n\n  const project = await prompts([\n    {\n      type: 'text',\n      name: 'slug',\n      message: 'What is the package slug?',\n      initial: defaultPackageSlug,\n    },\n    {\n      type: 'text',\n      name: 'name',\n      message: 'What is the project name?',\n      initial: defaultProjectName,\n    },\n    {\n      type: 'text',\n      name: 'version',\n      message: 'What is the initial version?',\n      initial: '0.1.0',\n    },\n    {\n      type: 'text',\n      name: 'description',\n      message: 'How would you describe the module?',\n    },\n    {\n      type: 'text',\n      name: 'package',\n      message: 'What is the Android package name?',\n      initial: `expo.modules.${defaultPackageSlug.replace(/\\W/g, '').toLowerCase()}`,\n    },\n  ]);\n\n  const { author, license } = await prompts([\n    {\n      type: 'text',\n      name: 'author',\n      message: 'Who is the author?',\n      initial: await npmWhoamiAsync(),\n    },\n    {\n      type: 'text',\n      name: 'license',\n      message: 'What is the license?',\n      initial: 'MIT',\n    },\n  ]);\n\n  return {\n    project,\n    author,\n    license,\n  };\n}\n\nmain();\n"]}